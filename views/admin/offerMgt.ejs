<%- include('../layout/adminHeader') %>

<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Offer Management</h2>
            <p>Manage product and category offers</p>
        </div>
        <div>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createProductOfferModal">Create Product Offer</button>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCategoryOfferModal">Create Category Offer</button>
        </div>
    </div>

    <!-- Product Offers -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="card-title">Product Offers</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Product</th>
                            <th>Discount</th>
                            <th>Expiration Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% productOffers.forEach((offer, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= offer.product.title %></td>
                                <td><%= offer.discount %>%</td>
                                <td><%= new Date(offer.expirationDate).toLocaleDateString() %></td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="confirmDelete('<%= offer._id %>', 'product')">Delete</button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Category Offers -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="card-title">Category Offers</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Category</th>
                            <th>Discount</th>
                            <th>Expiration Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% CategoryOffers.forEach((offer, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= offer.category.name %></td>
                                <td><%= offer.discount %>%</td>
                                <td><%= new Date(offer.expirationDate).toLocaleDateString() %></td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="confirmDelete('<%= offer._id %>', 'category')">Delete</button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

<!-- Create Product Offer Modal -->
<div class="modal fade" id="createProductOfferModal" tabindex="-1" aria-labelledby="createProductOfferModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createProductOfferModalLabel">Create Product Offer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createProductOfferForm">
                    <div class="mb-3">
                        <label for="product" class="form-label">Product</label>
                        <select class="form-select" id="product" required>
                            <% products.forEach(product => { %>
                                <option value="<%= product._id %>"><%= product.title %></option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="discountProduct" class="form-label">Discount (%)</label>
                        <input type="number" class="form-control" id="discountProduct" required>
                    </div>
                    <div class="mb-3">
                        <label for="expirationDateProduct" class="form-label">Expiration Date</label>
                        <input type="date" class="form-control" id="expirationDateProduct" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Create Offer</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Create Category Offer Modal -->
<div class="modal fade" id="createCategoryOfferModal" tabindex="-1" aria-labelledby="createCategoryOfferModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCategoryOfferModalLabel">Create Category Offer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createCategoryOfferForm">
                    <div class="mb-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-select" id="category" required>
                            <% categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="discountCategory" class="form-label">Discount (%)</label>
                        <input type="number" class="form-control" id="discountCategory" required>
                    </div>
                    <div class="mb-3">
                        <label for="expirationDateCategory" class="form-label">Expiration Date</label>
                        <input type="date" class="form-control" id="expirationDateCategory" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Create Offer</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="/admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="/admin-assets/js/vendors/select2.min.js"></script>
<script src="/admin-assets/js/vendors/perfect-scrollbar.js"></script>
<script src="/admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
<script src="/admin-assets/js/main.js" type="text/javascript"></script>

<script>
    document.getElementById('createProductOfferForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const productId = document.getElementById('product').value;
        const discount = document.getElementById('discountProduct').value;
        const expirationDate = document.getElementById('expirationDateProduct').value;

        const response = await fetch('/admin/createProductOffer', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, discount, expirationDate })
        });
        const result = await response.json();

        if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Product Offer Created Successfully',
                showConfirmButton: false,
                timer: 1500
            });
            setTimeout(() => location.reload(), 1500);
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error Creating Product Offer',
                text: result.message,
                showConfirmButton: false,
                timer: 1500
            });
        }
    });

    document.getElementById('createCategoryOfferForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const categoryId = document.getElementById('category').value;
        const discount = document.getElementById('discountCategory').value;
        const expirationDate = document.getElementById('expirationDateCategory').value;

        const response = await fetch('/admin/createCategoryOffer', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ categoryId, discount, expirationDate })
        });
        const result = await response.json();

        if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Category Offer Created Successfully',
                showConfirmButton: false,
                timer: 1500
            });
            setTimeout(() => location.reload(), 1500);
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error Creating Category Offer',
                text: result.message,
                showConfirmButton: false,
                timer: 1500
            });
        }
    });

    async function confirmDelete(offerId, type) {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: 'You are about to delete this offer.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        });

        if (result.isConfirmed) {
            const response = await fetch(`/admin/deleteOffer/${offerId}/${type}`, {
                method: 'DELETE'
            });
            const data = await response.json();

            if (data.success) {
                Swal.fire('Deleted!', 'The offer has been deleted.', 'success');
                setTimeout(() => location.reload(), 1500);
            } else {
                Swal.fire('Error!', 'An error occurred while deleting the offer.', 'error');
            }
        }
    }
</script>

<%- include('../layout/adminFooter') %>
